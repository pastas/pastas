name: CI

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev

jobs:
  test:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Test suite with py39-ubuntu
            python: "3.9"
            toxenv: py39
            experimental: false
          - name: Test suite with py310-ubuntu
            python: "3.10"
            toxenv: py310
            experimental: false
          - name: Test suite with py311-ubuntu
            python: "3.11"
            toxenv: py311
            experimental: false
          - name: Test suite with py312-ubuntu
            python: "3.12"
            toxenv: py312
            experimental: false
          - name: Formatting with black + isort
            python: "3.9"
            toxenv: format
            experimental: false
          - name: Linting with flake8
            python: "3.9"
            toxenv: lint
            experimental: false
          - name: Test suite for all unit tests including Notebooks
            python: "3.9"
            toxenv: all
            experimental: false
    env:
      # Color Output
      # Rich (pip)
      FORCE_COLOR: 1
      # Tox
      PY_COLORS: 1
      # Pytest
      PYTEST_ADDOPTS: "--color=yes"
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          check-latest: true
          cache: "pip"
          cache-dependency-path: pyproject.toml

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Setup tox environment
        run: tox -e ${{ matrix.toxenv }} --notest

      - name: Test
        run: tox -e ${{ matrix.toxenv }} --skip-pkg-install

      - name: Run codacy-coverage-reporter
        if: ${{ matrix.toxenv == 'all' && github.repository == 'pastas/pastas' && success() }}
        uses: codacy/codacy-coverage-reporter-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage.xml
